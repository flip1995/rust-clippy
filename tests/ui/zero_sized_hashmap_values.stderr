error: map with zero-sized value type
  --> tests/ui/zero_sized_hashmap_values.rs:5:28
   |
LL | const CONST_NOT_OK: Option<HashMap<String, ()>> = None;
   |                            ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a set instead
   = note: `-D clippy::zero-sized-map-values` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::zero_sized_map_values)]`

error: map with zero-sized value type
  --> tests/ui/zero_sized_hashmap_values.rs:10:30
   |
LL | static STATIC_NOT_OK: Option<HashMap<String, ()>> = None;
   |                              ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a set instead

error: map with zero-sized value type
  --> tests/ui/zero_sized_hashmap_values.rs:15:17
   |
LL | type NotOkMap = HashMap<String, ()>;
   |                 ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a set instead

error: map with zero-sized value type
  --> tests/ui/zero_sized_hashmap_values.rs:21:11
   |
LL |     NotOk(HashMap<String, ()>),
   |           ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a set instead

error: map with zero-sized value type
  --> tests/ui/zero_sized_hashmap_values.rs:28:13
   |
LL |     not_ok: HashMap<String, ()>,
   |             ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a set instead

error: map with zero-sized value type
  --> tests/ui/zero_sized_hashmap_values.rs:31:22
   |
LL |     also_not_ok: Vec<HashMap<usize, ()>>,
   |                      ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a set instead

error: map with zero-sized value type
  --> tests/ui/zero_sized_hashmap_values.rs:41:30
   |
LL |     fn weird_map(&self, map: HashMap<usize, ()>);
   |                              ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a set instead

error: map with zero-sized value type
  --> tests/ui/zero_sized_hashmap_values.rs:51:25
   |
LL |     fn not_ok(&self) -> HashMap<String, ()> {
   |                         ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a set instead

error: map with zero-sized value type
  --> tests/ui/zero_sized_hashmap_values.rs:70:14
   |
LL | fn test(map: HashMap<String, ()>, key: &str) -> HashMap<String, ()> {
   |              ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a set instead

error: map with zero-sized value type
  --> tests/ui/zero_sized_hashmap_values.rs:70:49
   |
LL | fn test(map: HashMap<String, ()>, key: &str) -> HashMap<String, ()> {
   |                                                 ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a set instead

error: map with zero-sized value type
  --> tests/ui/zero_sized_hashmap_values.rs:83:34
   |
LL |     let _: HashMap<String, ()> = HashMap::new();
   |                                  ^^^^^^^
   |
   = help: consider using a set instead

error: map with zero-sized value type
  --> tests/ui/zero_sized_hashmap_values.rs:83:12
   |
LL |     let _: HashMap<String, ()> = HashMap::new();
   |            ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a set instead

error: map with zero-sized value type
  --> tests/ui/zero_sized_hashmap_values.rs:90:12
   |
LL |     let _: HashMap<_, _> = std::iter::empty::<(String, ())>().collect();
   |            ^^^^^^^^^^^^^
   |
   = help: consider using a set instead

error: aborting due to 13 previous errors

