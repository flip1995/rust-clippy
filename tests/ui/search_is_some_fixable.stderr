error: called `is_some()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:10:22
   |
LL |     let _ = v.iter().find(|&x| *x < 0).is_some();
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| *x < 0)`
   |
   = note: `-D clippy::search-is-some` implied by `-D warnings`

error: called `is_some()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:11:20
   |
LL |     let _ = (0..1).find(|x| **y == *x).is_some(); // one dereference less
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| **y == x)`

error: called `is_some()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:12:20
   |
LL |     let _ = (0..1).find(|x| *x == 0).is_some();
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x == 0)`

error: called `is_some()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:13:22
   |
LL |     let _ = v.iter().find(|x| **x == 0).is_some();
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| *x == 0)`

error: called `is_some()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:14:20
   |
LL |     let _ = (4..5).find(|x| *x == 1 || *x == 3 || *x == 5).is_some();
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x == 1 || x == 3 || x == 5)`

error: called `is_some()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:15:20
   |
LL |     let _ = (1..3).find(|x| [1, 2, 3].contains(x)).is_some();
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| [1, 2, 3].contains(&x))`

error: called `is_some()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:16:20
   |
LL |     let _ = (1..3).find(|x| *x == 0 || [1, 2, 3].contains(x)).is_some();
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x == 0 || [1, 2, 3].contains(&x))`

error: called `is_some()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:17:20
   |
LL |     let _ = (1..3).find(|x| [1, 2, 3].contains(x) || *x == 0).is_some();
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| [1, 2, 3].contains(&x) || x == 0)`

error: called `is_some()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:19:10
   |
LL |           .find(|x| [1, 2, 3].contains(x) || *x == 0 || [4, 5, 6].contains(x) || *x == -1)
   |  __________^
LL | |         .is_some();
   | |__________________^ help: use `any()` instead: `any(|x| [1, 2, 3].contains(&x) || x == 0 || [4, 5, 6].contains(&x) || x == -1)`

error: called `is_some()` after searching an `Iterator` with `position`
  --> $DIR/search_is_some_fixable.rs:23:22
   |
LL |     let _ = v.iter().position(|&x| x < 0).is_some();
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|&x| x < 0)`

error: called `is_some()` after searching an `Iterator` with `rposition`
  --> $DIR/search_is_some_fixable.rs:26:22
   |
LL |     let _ = v.iter().rposition(|&x| x < 0).is_some();
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|&x| x < 0)`

error: called `is_some()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:31:27
   |
LL |     let _ = "hello world".find("world").is_some();
   |                           ^^^^^^^^^^^^^^^^^^^^^^^ help: use `contains()` instead: `contains("world")`

error: called `is_some()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:32:27
   |
LL |     let _ = "hello world".find(&s2).is_some();
   |                           ^^^^^^^^^^^^^^^^^^^ help: use `contains()` instead: `contains(&s2)`

error: called `is_some()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:33:27
   |
LL |     let _ = "hello world".find(&s2[2..]).is_some();
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `contains()` instead: `contains(&s2[2..])`

error: called `is_some()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:35:16
   |
LL |     let _ = s1.find("world").is_some();
   |                ^^^^^^^^^^^^^^^^^^^^^^^ help: use `contains()` instead: `contains("world")`

error: called `is_some()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:36:16
   |
LL |     let _ = s1.find(&s2).is_some();
   |                ^^^^^^^^^^^^^^^^^^^ help: use `contains()` instead: `contains(&s2)`

error: called `is_some()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:37:16
   |
LL |     let _ = s1.find(&s2[2..]).is_some();
   |                ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `contains()` instead: `contains(&s2[2..])`

error: called `is_some()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:39:21
   |
LL |     let _ = s1[2..].find("world").is_some();
   |                     ^^^^^^^^^^^^^^^^^^^^^^^ help: use `contains()` instead: `contains("world")`

error: called `is_some()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:40:21
   |
LL |     let _ = s1[2..].find(&s2).is_some();
   |                     ^^^^^^^^^^^^^^^^^^^ help: use `contains()` instead: `contains(&s2)`

error: called `is_some()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:41:21
   |
LL |     let _ = s1[2..].find(&s2[2..]).is_some();
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `contains()` instead: `contains(&s2[2..])`

error: called `is_none()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:49:13
   |
LL |     let _ = v.iter().find(|&x| *x < 0).is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.any()` instead: `!v.iter().any(|x| *x < 0)`

error: called `is_none()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:50:13
   |
LL |     let _ = (0..1).find(|x| **y == *x).is_none(); // one dereference less
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.any()` instead: `!(0..1).any(|x| **y == x)`

error: called `is_none()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:51:13
   |
LL |     let _ = (0..1).find(|x| *x == 0).is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.any()` instead: `!(0..1).any(|x| x == 0)`

error: called `is_none()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:52:13
   |
LL |     let _ = v.iter().find(|x| **x == 0).is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.any()` instead: `!v.iter().any(|x| *x == 0)`

error: called `is_none()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:53:13
   |
LL |     let _ = (4..5).find(|x| *x == 1 || *x == 3 || *x == 5).is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.any()` instead: `!(4..5).any(|x| x == 1 || x == 3 || x == 5)`

error: called `is_none()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:54:13
   |
LL |     let _ = (1..3).find(|x| [1, 2, 3].contains(x)).is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.any()` instead: `!(1..3).any(|x| [1, 2, 3].contains(&x))`

error: called `is_none()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:55:13
   |
LL |     let _ = (1..3).find(|x| *x == 0 || [1, 2, 3].contains(x)).is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.any()` instead: `!(1..3).any(|x| x == 0 || [1, 2, 3].contains(&x))`

error: called `is_none()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:56:13
   |
LL |     let _ = (1..3).find(|x| [1, 2, 3].contains(x) || *x == 0).is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.any()` instead: `!(1..3).any(|x| [1, 2, 3].contains(&x) || x == 0)`

error: called `is_none()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:57:13
   |
LL |       let _ = (1..3)
   |  _____________^
LL | |         .find(|x| [1, 2, 3].contains(x) || *x == 0 || [4, 5, 6].contains(x) || *x == -1)
LL | |         .is_none();
   | |__________________^ help: use `!_.any()` instead: `!(1..3).any(|x| [1, 2, 3].contains(&x) || x == 0 || [4, 5, 6].contains(&x) || x == -1)`

error: called `is_none()` after searching an `Iterator` with `position`
  --> $DIR/search_is_some_fixable.rs:62:13
   |
LL |     let _ = v.iter().position(|&x| x < 0).is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.any()` instead: `!v.iter().any(|&x| x < 0)`

error: called `is_none()` after searching an `Iterator` with `rposition`
  --> $DIR/search_is_some_fixable.rs:65:13
   |
LL |     let _ = v.iter().rposition(|&x| x < 0).is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.any()` instead: `!v.iter().any(|&x| x < 0)`

error: called `is_none()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:71:13
   |
LL |     let _ = "hello world".find("world").is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.contains()` instead: `!"hello world".contains("world")`

error: called `is_none()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:72:13
   |
LL |     let _ = "hello world".find(&s2).is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.contains()` instead: `!"hello world".contains(&s2)`

error: called `is_none()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:73:13
   |
LL |     let _ = "hello world".find(&s2[2..]).is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.contains()` instead: `!"hello world".contains(&s2[2..])`

error: called `is_none()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:75:13
   |
LL |     let _ = s1.find("world").is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.contains()` instead: `!s1.contains("world")`

error: called `is_none()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:76:13
   |
LL |     let _ = s1.find(&s2).is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.contains()` instead: `!s1.contains(&s2)`

error: called `is_none()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:77:13
   |
LL |     let _ = s1.find(&s2[2..]).is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.contains()` instead: `!s1.contains(&s2[2..])`

error: called `is_none()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:79:13
   |
LL |     let _ = s1[2..].find("world").is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.contains()` instead: `!s1[2..].contains("world")`

error: called `is_none()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:80:13
   |
LL |     let _ = s1[2..].find(&s2).is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.contains()` instead: `!s1[2..].contains(&s2)`

error: called `is_none()` after calling `find()` on a string
  --> $DIR/search_is_some_fixable.rs:81:13
   |
LL |     let _ = s1[2..].find(&s2[2..]).is_none();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.contains()` instead: `!s1[2..].contains(&s2[2..])`

error: called `is_none()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:97:25
   |
LL |             .filter(|c| filter_hand.iter().find(|cc| c == cc).is_none())
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.any()` instead: `!filter_hand.iter().any(|cc| c == &cc)`

error: called `is_none()` after searching an `Iterator` with `find`
  --> $DIR/search_is_some_fixable.rs:113:30
   |
LL |             .filter(|(c, _)| filter_hand.iter().find(|cc| c == *cc).is_none())
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.any()` instead: `!filter_hand.iter().any(|cc| c == cc)`

error: aborting due to 42 previous errors

